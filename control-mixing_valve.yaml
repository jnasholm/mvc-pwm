# Mixing valve controller configuration

# Relay configuration
switch:
  # Relay actuator decrease
  - platform: gpio
    id: decrease_relay
    interlock: [ increase_relay ]
    pin:
      number: GPIO25
      inverted: true
    on_turn_on:
      - delay: 400ms
      - switch.turn_off: decrease_relay
  # Relay actuator increase
  - platform: gpio
    id: increase_relay
    interlock: [ decrease_relay ]
    pin:
      number: GPIO26
      inverted: true
    on_turn_on:
      - delay: 400ms
      - switch.turn_off: increase_relay

  # Mixing valve actuator decrease
  - platform: template
    id: ${node_name}_mixing_valve_actuator_decrease
    optimistic: true
    on_turn_on:
      - while:
          condition:
            and:
              - switch.is_on: ${node_name}_mixing_valve_actuator_decrease
              - switch.is_off: ${node_name}_mixing_valve_position_hold
          then:
            - switch.turn_on: decrease_relay
            - number.decrement:
                id: ${node_name}_mixing_valve_position_counter
                cycle: false
            - component.update: ${node_name}_actuator_variable_delay
            - delay: !lambda |-
                if ( id(${node_name}_actuator_variable_delay).state >= 1000 )
                  return id(${node_name}_actuator_variable_delay).state;
                else
                  return 6000;
    on_turn_off:
      - switch.turn_off: decrease_relay

  # Mixing valve actuator increase
  - platform: template
    id: ${node_name}_mixing_valve_actuator_increase
    optimistic: true
    on_turn_on:
      - while:
          condition:
            and:
              - switch.is_on: ${node_name}_mixing_valve_actuator_increase
              - switch.is_off: ${node_name}_mixing_valve_position_hold
          then:
            - switch.turn_on: increase_relay
            - number.increment:
                id: ${node_name}_mixing_valve_position_counter
                cycle: false
            - component.update: ${node_name}_actuator_variable_delay
            - delay: !lambda |-
                if ( id(${node_name}_actuator_variable_delay).state >= 1000 )
                  return id(${node_name}_actuator_variable_delay).state;
                else
                  return 6000;
    on_turn_off:
      - switch.turn_off: increase_relay

# Mixing valve actuator configuration
output:
  # Mixing valve actuator decrease
  - platform: sigma_delta_output
    update_interval: 6s
    id: ${node_name}_actuator_modulation_decrease
    max_power: 0.4
    min_power: 0.0
    zero_means_zero: true
    turn_on_action:
      - lambda: |-
          if ( id(${node_name}_controller_mode).state )
            id(${node_name}_mixing_valve_actuator_decrease).turn_on();
    turn_off_action:
      - lambda: |-
          if ( id(${node_name}_controller_mode).state )
            id(${node_name}_mixing_valve_actuator_decrease).turn_off();
  # Mixing valve actuator increase
  - platform: sigma_delta_output
    update_interval: 6s
    id: ${node_name}_actuator_modulation_increase
    max_power: 0.4
    min_power: 0.0
    zero_means_zero: true
    turn_on_action:
      - lambda: |-
          if ( id(${node_name}_controller_mode).state )
            id(${node_name}_mixing_valve_actuator_increase).turn_on();
    turn_off_action:
      - lambda: |-
          if ( id(${node_name}_controller_mode).state )
            id(${node_name}_mixing_valve_actuator_increase).turn_off();

# Thermostat configuration

# Supply line temperature controller
#   Sampling time, Ts:      10 s (update interval of temperature sensor)
#   Critical gain, Kc:       2.0 (proportional constant causing oscillation)
#   Critical period, Pc:   480 s (cycle time at oscillating condition)
# Calculated parameters  
#   Integral time, Ti:     240 s (0.50 x Pc)
#   Derivative time, Td:    60 s (0.25 x Ti)
# Controller parameters
#   Proportional constant, kp:   1.2       (0.60 x Kc)
#   Integral constant, ki:       0.0041667 (1/Ti)
#   Derivative constant, kd:     6.0       (Td/Ts)
climate:
  - platform: pid
    name: $node_prefix framledningsreglering
    id: ${node_name}_supply_line_controller
    sensor: active_supply_line_temperature
    default_target_temperature: 21.0°C
    cool_output: ${node_name}_actuator_modulation_decrease
    heat_output: ${node_name}_actuator_modulation_increase
    on_control:
      - climate.pid.reset_integral_term: ${node_name}_supply_line_controller
    control_parameters:
      kp: 1.2
      ki: 0.0041667
      kd: 6.0
      output_averaging_samples: 3
      derivative_averaging_samples: 5
    deadband_parameters:
      threshold_high: 0.08°C
      threshold_low: -0.08°C
      kp_multiplier: 0.1
      ki_multiplier: 0.2
      kd_multiplier: 0.1
    visual:
      min_temperature: 15.0°C
      max_temperature: 35.0°C
      temperature_step: 0.1°C

# Supply line temperature controller sensors
sensor:
  # Active Supply line temperature sensor
  - platform: template
    id: active_supply_line_temperature
    accuracy_decimals: 2
    update_interval: 10s
    lambda: |-
      if ( id(${node_name}_supply_line_temperature_median).state > 0.0 )
        return id(${node_name}_supply_line_temperature_median).state;
      else
        return id(${node_name}_supply_line_temperature).state;
  # Mixing valve actuator variable delay time
  #   Manual operation:         1s
  #   Automatic operation:      6s (mixing valve actuator variable delay setting)
  - platform: template
    id: ${node_name}_actuator_variable_delay
    accuracy_decimals: 0
    update_interval: never
    lambda: |-
      if ( id(mixing_valve_manual_decrease).state )
        return 1000;
      if ( id(mixing_valve_manual_increase).state )
        return 1000;
      if ( (id(${node_name}_controller_mode).state) &&
           (id(${node_name}_actuator_variable_delay_setting).state >= 1) )
        return id(${node_name}_actuator_variable_delay_setting).state * 1000;
      return 12000;
  # Supply line modulation level decrease
  - platform: pid
    name: $node_prefix reglernivå minska
    id: ${node_name}_supply_line_modulation_level_decrease
    icon: mdi:chart-bell-curve-cumulative
    climate_id: ${node_name}_supply_line_controller
    type: COOL
  # Supply line modulation level increase
  - platform: pid
    name: $node_prefix reglernivå öka
    id: ${node_name}_supply_line_modulation_level_increase
    icon: mdi:chart-bell-curve-cumulative
    climate_id: ${node_name}_supply_line_controller
    type: HEAT
  # Supply line temperature calculated error
  - platform: pid
    id: ${node_name}_supply_line_temperature_error
    climate_id: ${node_name}_supply_line_controller
    type: ERROR
  # Supply line controller proportional term
  - platform: pid
    id: ${node_name}_supply_line_controller_term_p
    climate_id: ${node_name}_supply_line_controller
    type: PROPORTIONAL
  # Supply line controller integral term
  - platform: pid
    id: ${node_name}_supply_line_controller_term_i
    climate_id: ${node_name}_supply_line_controller
    type: INTEGRAL
  # Supply line controller derivative term
  - platform: pid
    id: ${node_name}_supply_line_controller_term_d
    climate_id: ${node_name}_supply_line_controller
    type: DERIVATIVE

# Mixing valve actuator operational indicators
binary_sensor:
  # Decrease
  - platform: template
    name: $node_prefix minska
    id: ${node_name}_mixing_valve_status_decrease
    icon: mdi:minus-circle
    filters:
      - delayed_on_off: 400ms
    lambda: |-
      if ( id(${node_name}_controller_mode).state ) {
        if ( id(${node_name}_supply_line_modulation_level_decrease).state > 0.0 )
          return true;
      } else {
        if ( id(mixing_valve_manual_decrease).state )
          return true;
      }
      return false;
  # Neutral
  - platform: template
    name: $node_prefix neutral
    id: ${node_name}_mixing_valve_status_neutral
    icon: mdi:circle-outline
    filters:
      - delayed_on_off: 400ms
    lambda: |-
      if ( id(${node_name}_controller_mode).state ) {
        if ( (id(${node_name}_supply_line_modulation_level_decrease).state <= 4.0) && 
             (id(${node_name}_supply_line_modulation_level_increase).state <= 4.0) )
          return true;
      } else {
        if ( (id(mixing_valve_manual_decrease).state == 0) &&
             (id(mixing_valve_manual_increase).state == 0) )
          return true;
      }
      return false;
  # Increase
  - platform: template
    name: $node_prefix öka
    id: ${node_name}_mixing_valve_status_increase
    icon: mdi:plus-circle
    filters:
      - delayed_on_off: 400ms
    lambda: |-
      if ( id(${node_name}_controller_mode).state ) {
        if ( id(${node_name}_supply_line_modulation_level_increase).state > 0.0 )
          return true;
      } else {
        if ( id(mixing_valve_manual_increase).state )
          return true;
      }
      return false;

# Mixing valve actuator numbers
number:
  # Mixing valve actuator position counter
  - platform: template
    name: $node_prefix läge
    id: ${node_name}_mixing_valve_position_counter
    icon: mdi:knob
    unit_of_measurement: ""
    initial_value: 0
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 240
    step: 1
    mode: slider
  # Mixing valve actuator variable delay setting
  - platform: template
    name: $node_prefix paustid
    id: ${node_name}_actuator_variable_delay_setting
    icon: mdi:knob
    unit_of_measurement: s
    initial_value: 6
    restore_value: true
    optimistic: true
    min_value: 2
    max_value: 20
    step: 1
    mode: slider
