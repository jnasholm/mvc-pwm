# Status configuration

# Controller status indicator
output:
  - platform: ledc
    id: ${node_name}_controller_status
    pin: GPIO33

# System status indicator
light:
  - platform: status_led
    name: $node_prefix systemstatus
    id: ${node_name}_system_status_indicator
    pin:
      number: GPIO32
      inverted: true
# Controller status indicator
  - platform: monochromatic
    name: $node_prefix reglerstatus
    id: ${node_name}_controller_status_indicator
    output: ${node_name}_controller_status
    effects:
      - pulse:
          name: auto_mode
          transition_length: 0.2s
          update_interval: 0.8s
      - pulse:
          name: manual_mode
          transition_length: 0.2s
          update_interval: 4s

# Controller operational state indication
switch:
  - platform: template
    id: ${node_name}_controller_state_indication
    lambda: |-
      if (id(${node_name}_controller_mode).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - light.turn_on:
          id: ${node_name}_controller_status_indicator
          effect: auto_mode
    turn_off_action:
      - light.turn_on:
          id: ${node_name}_controller_status_indicator
          effect: manual_mode

# Controller operational state
#binary_sensor:
#  - platform: template
#    id: controller_state
#    lambda: |-
#      if ( (id(zone1_modulation_level).state == 0) && 
#           (id(zone2_modulation_level).state == 0) && 
#           (id(zone3_modulation_level).state == 0) && 
#           (id(zone4_modulation_level).state == 0) ) {
#        if ( id(controller_state_indication).state ) {
#          id(controller_state_indication).turn_off();
#        }
#        return false;
#      } else {
#        if ( !id(controller_state_indication).state ) {
#          id(controller_state_indication).turn_on();
#        }
#        return true;
#      }
