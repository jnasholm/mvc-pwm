# Supply line temperature configuration

# Default operational mode
esphome:
  on_boot:
    priority: 201
    then:
      - switch.turn_on: ${node_name}_outdoor_temp_compensated_mode

# Operational switches
switch:
  # Operational mode
  - platform: template
    name: $node_prefix tillopp utetemperaturkompensering
    id: ${node_name}_outdoor_temp_compensated_mode
    icon: mdi:thermometer-auto
    restore_mode: ALWAYS_ON
    # Automatic outdoor temperature compensated supply line temperature mode
    turn_on_action:
      - lambda: |-
          if ( id(${node_name}_controller_mode).state == 0 )
            id(${node_name}_controller_mode).turn_on();
          id(${node_name}_outdoor_temp_compensated_mode).publish_state(true);
    # Manual supply line temperature mode
    turn_off_action:
      - lambda: |-
          id(${node_name}_outdoor_temp_compensated_mode).publish_state(false);

# Supply line temperature definition points, p1 to p6
number:
  - platform: template
    name: $node_prefix utetemperatur p1
    id: outdoor_temp_p1
    unit_of_measurement: °C
    initial_value: -10.0
    restore_value: true
    optimistic: true
    max_value: 30.0
    min_value: -20.0
    step: 1
    mode: box
  - platform: template
    name: $node_prefix framledningstemperatur p1
    id: supply_temp_p1
    unit_of_measurement: °C
    initial_value: 30.0
    restore_value: true
    optimistic: true
    max_value: 40.0
    min_value: 20.0
    step: 0.1
    mode: box
  - platform: template
    name: $node_prefix utetemperatur p2
    id: outdoor_temp_p2
    unit_of_measurement: °C
    initial_value: -5.0
    restore_value: true
    optimistic: true
    max_value: 30.0
    min_value: -20.0
    step: 1
    mode: box
  - platform: template
    name: $node_prefix framledningstemperatur p2
    id: supply_temp_p2
    unit_of_measurement: °C
    initial_value: 28.0
    restore_value: true
    optimistic: true
    max_value: 40.0
    min_value: 20.0
    step: 0.1
    mode: box
  - platform: template
    name: $node_prefix utetemperatur p3
    id: outdoor_temp_p3
    unit_of_measurement: °C
    initial_value: 0.0
    restore_value: true
    optimistic: true
    max_value: 30.0
    min_value: -20.0
    step: 1
    mode: box
  - platform: template
    name: $node_prefix framledningstemperatur p3
    id: supply_temp_p3
    unit_of_measurement: °C
    initial_value: 25.0
    restore_value: true
    optimistic: true
    max_value: 40.0
    min_value: 20.0
    step: 0.1
    mode: box
  - platform: template
    name: $node_prefix utetemperatur p4
    id: outdoor_temp_p4
    unit_of_measurement: °C
    initial_value: 5.0
    restore_value: true
    optimistic: true
    max_value: 30.0
    min_value: -20.0
    step: 1
    mode: box
  - platform: template
    name: $node_prefix framledningstemperatur p4
    id: supply_temp_p4
    unit_of_measurement: °C
    initial_value: 23.0
    restore_value: true
    optimistic: true
    max_value: 40.0
    min_value: 20.0
    step: 0.1
    mode: box
  - platform: template
    name: $node_prefix utetemperatur p5
    id: outdoor_temp_p5
    unit_of_measurement: °C
    initial_value: 10.0
    restore_value: true
    optimistic: true
    max_value: 30.0
    min_value: -20.0
    step: 1
    mode: box
  - platform: template
    name: $node_prefix framledningstemperatur p5
    id: supply_temp_p5
    unit_of_measurement: °C
    initial_value: 22.0
    restore_value: true
    optimistic: true
    max_value: 40.0
    min_value: 20.0
    step: 0.1
    mode: box
  - platform: template
    name: $node_prefix utetemperatur p6
    id: outdoor_temp_p6
    unit_of_measurement: °C
    initial_value: 20.0
    restore_value: true
    optimistic: true
    max_value: 30.0
    min_value: -20.0
    step: 1
    mode: box
  - platform: template
    name: $node_prefix framledningstemperatur p6
    id: supply_temp_p6
    unit_of_measurement: °C
    initial_value: 21.0
    restore_value: true
    optimistic: true
    max_value: 40.0
    min_value: 20.0
    step: 0.1
    mode: box
# Supply line temperature offset and scaling
  - platform: template
    name: $node_prefix kurvförskjutning
    id: supply_temp_offset
    unit_of_measurement: °C
    initial_value: 0.0
    restore_value: true
    optimistic: true
    max_value: 4.0
    min_value: -4.0
    step: 0.1
    mode: box
  - platform: template
    name: $node_prefix kurvskalning
    id: supply_temp_multiply
    initial_value: 1.0
    restore_value: true
    optimistic: true
    max_value: 2.0
    min_value: 0.2
    step: 0.1
    mode: box

# Supply line temperature as function of outdoor temperature
sensor:
  - platform: template
    name: $node_prefix tillopp beräknad
    id: ${node_name}_supply_line_target_temperature
    icon: mdi:thermometer-auto
    unit_of_measurement: °C
    state_class: measurement
    accuracy_decimals: 2
    update_interval: 10s
    filters:
#      - offset: 0.0
#      - multiply: 1.0
      - lambda: return x * (id(supply_temp_multiply).state) + (id(supply_temp_offset).state);
      - heartbeat: 10s
    on_value:
      - if:
          condition:
            switch.is_on: ${node_name}_outdoor_temp_compensated_mode
          then:
            - climate.control:
                id: ${node_name}_supply_line_controller
                target_temperature: !lambda return x;
    lambda: |-
      float temp_od = id(outdoor_temperature).state;
      float temp_sl;
      float od_1, od_2, sl_1, sl_2;
      /* Linear interpolation points (p1,p2) */
      if ( temp_od < id(outdoor_temp_p2).state ) {
        od_1 = id(outdoor_temp_p1).state;
        od_2 = id(outdoor_temp_p2).state;
        sl_1 = id(supply_temp_p1).state;
        sl_2 = id(supply_temp_p2).state;
      }
      /* Linear interpolation points (p2,p3) */
      if ( (temp_od >= id(outdoor_temp_p2).state) && (temp_od < id(outdoor_temp_p3).state) ) {
        od_1 = id(outdoor_temp_p2).state;
        od_2 = id(outdoor_temp_p3).state;
        sl_1 = id(supply_temp_p2).state;
        sl_2 = id(supply_temp_p3).state;
      }
      /* Linear interpolation points (p3,p4) */
      if ( (temp_od >= id(outdoor_temp_p3).state) && (temp_od < id(outdoor_temp_p4).state) ) {
        od_1 = id(outdoor_temp_p3).state;
        od_2 = id(outdoor_temp_p4).state;
        sl_1 = id(supply_temp_p3).state;
        sl_2 = id(supply_temp_p4).state;
      }
      /* Linear interpolation points (p4,p5) */
      if ( (temp_od >= id(outdoor_temp_p4).state) && (temp_od < id(outdoor_temp_p5).state) ) {
        od_1 = id(outdoor_temp_p4).state;
        od_2 = id(outdoor_temp_p5).state;
        sl_1 = id(supply_temp_p4).state;
        sl_2 = id(supply_temp_p5).state;
      }
      /* Linear interpolation points (p5,p6) */
      if ( temp_od >= id(outdoor_temp_p5).state ) {
        od_1 = id(outdoor_temp_p5).state;
        od_2 = id(outdoor_temp_p6).state;
        sl_1 = id(supply_temp_p5).state;
        sl_2 = id(supply_temp_p6).state;
      }
      /* Linear interpolation calculation */
      if ( od_2 - od_1 > 0 )
        temp_sl = sl_1 + (sl_2 - sl_1)/(od_2 - od_1) * (temp_od - od_1);
      /* Fail-safe value */
      if ( (temp_sl < 10.0) || (temp_sl > 40.0) )
        temp_sl = 22.5;
      return temp_sl;
